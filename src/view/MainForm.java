/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAOmysql.Dados;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author pedro
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        novo = new javax.swing.JMenu();
        novoCliente = new javax.swing.JMenuItem();
        novoFornecedor = new javax.swing.JMenuItem();
        novoProduto = new javax.swing.JMenuItem();
        gerenciar = new javax.swing.JMenu();
        gerenciarCliente = new javax.swing.JMenuItem();
        gerenciarFornecedor = new javax.swing.JMenuItem();
        gerenciarProduto = new javax.swing.JMenuItem();
        estoque = new javax.swing.JMenu();
        relatorio = new javax.swing.JMenu();
        relatorioItem = new javax.swing.JMenuItem();
        relatorioCliente = new javax.swing.JMenuItem();
        relatorioVendas = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gerenciamento de Farmácia");

        jButton1.setText("Vender");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        novo.setText("Novo");

        novoCliente.setText("Cliente");
        novoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoClienteActionPerformed(evt);
            }
        });
        novo.add(novoCliente);

        novoFornecedor.setText("Fornecedor");
        novoFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoFornecedorActionPerformed(evt);
            }
        });
        novo.add(novoFornecedor);

        novoProduto.setText("Produto");
        novoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoProdutoActionPerformed(evt);
            }
        });
        novo.add(novoProduto);

        jMenuBar1.add(novo);

        gerenciar.setText("Gerenciar");

        gerenciarCliente.setText("Cliente");
        gerenciarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarClienteActionPerformed(evt);
            }
        });
        gerenciar.add(gerenciarCliente);

        gerenciarFornecedor.setText("Fornecedor");
        gerenciarFornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarFornecedorActionPerformed(evt);
            }
        });
        gerenciar.add(gerenciarFornecedor);

        gerenciarProduto.setText("Produto");
        gerenciarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciarProdutoActionPerformed(evt);
            }
        });
        gerenciar.add(gerenciarProduto);

        jMenuBar1.add(gerenciar);

        estoque.setText("Estoque");
        estoque.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                estoqueMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        estoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                estoqueMouseClicked(evt);
            }
        });
        estoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estoqueActionPerformed(evt);
            }
        });
        jMenuBar1.add(estoque);

        relatorio.setText("Relatório");
        relatorio.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                relatorioMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        relatorio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                relatorioMouseClicked(evt);
            }
        });
        relatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioActionPerformed(evt);
            }
        });

        relatorioItem.setText("Itens no Estoque");
        relatorioItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioItemActionPerformed(evt);
            }
        });
        relatorio.add(relatorioItem);

        relatorioCliente.setText("Vendas do Cliente");
        relatorioCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioClienteActionPerformed(evt);
            }
        });
        relatorio.add(relatorioCliente);

        relatorioVendas.setText("Todas Vendas");
        relatorioVendas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                relatorioVendasActionPerformed(evt);
            }
        });
        relatorio.add(relatorioVendas);

        jMenuBar1.add(relatorio);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 151, Short.MAX_VALUE)
                .addComponent(jButtonSair)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(126, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSair)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void gerenciarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarClienteActionPerformed
        // TODO add your handling code here:
        formCliente form;
        try {
            form = new formCliente();
            form.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gerenciarClienteActionPerformed

    private void novoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoClienteActionPerformed
        // TODO add your handling code here:
        formCliente form;
        try {
            form = new formCliente();
            form.setCodigo(true);
            form.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_novoClienteActionPerformed

    private void gerenciarFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarFornecedorActionPerformed
        // TODO add your handling code here:
        formFornecedor form;
        try {
            form = new formFornecedor();
            form.setVisible(true);
            form.setCodigo(false);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gerenciarFornecedorActionPerformed

    private void novoFornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoFornecedorActionPerformed
        // TODO add your handling code here:
        formFornecedor form;
        try {
            form = new formFornecedor();
            form.setCodigo(true);
            form.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_novoFornecedorActionPerformed

    private void novoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoProdutoActionPerformed
        // TODO add your handling code here:
        formProduto form;
        try {
            form = new formProduto();
            form.setCodigo(true);
            form.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_novoProdutoActionPerformed

    private void gerenciarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciarProdutoActionPerformed
        formProduto form;
        try {
            form = new formProduto();
            form.setVisible(true);
            form.setCodigo(false);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_gerenciarProdutoActionPerformed

    private void estoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_estoqueMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_estoqueMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        formVenda form;
        try {
            form = new formVenda();
            form.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void estoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estoqueActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_estoqueActionPerformed

    private void estoqueMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_estoqueMenuSelected
        // TODO add your handling code here:
        formEstoque form;
        try {
            form = new formEstoque();
            form.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_estoqueMenuSelected

    private void relatorioMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_relatorioMenuSelected
        // TODO add your handling code here:
    }//GEN-LAST:event_relatorioMenuSelected

    private void relatorioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_relatorioMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_relatorioMouseClicked

    private void relatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_relatorioActionPerformed

    private void relatorioItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioItemActionPerformed
        // TODO add your handling code here:
        Map params = new HashMap();
        String s = null;
        
        while (true) {
            s = JOptionPane.showInputDialog("Quantidade minima de item no estoque");
            if (!isNumeric(s)) {
                JOptionPane.showMessageDialog(null,"Você não respondeu a pergunta.");
            }else{
                break;
            }
        }        
        params.put("qtdItem", Integer.parseInt(s));
        
        visualizarRelatorio(params, rItem);
        
    }//GEN-LAST:event_relatorioItemActionPerformed

    private void relatorioClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioClienteActionPerformed
        // TODO add your handling code here:
        Map params = new HashMap();
        String s = null;
        
        while (true) {
            s = JOptionPane.showInputDialog("Digite o ID do cliente");
            if (!isNumeric(s)) {
                JOptionPane.showMessageDialog(null,"Você não respondeu a pergunta.");
            }else{
                break;
            }
        }        
        params.put("idCliente", Integer.parseInt(s));
        
        visualizarRelatorio(params, rCliente);
    }//GEN-LAST:event_relatorioClienteActionPerformed

    private void relatorioVendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_relatorioVendasActionPerformed
        // TODO add your handling code here:
        visualizarRelatorio(null, rVenda);
    }//GEN-LAST:event_relatorioVendasActionPerformed

    private boolean isNumeric(String s) {  
        return s != null && s.matches("[-+]?\\d*\\.?\\d+");  
    } 
    
    private void visualizarRelatorio(Map params, String relatorio){
    //  Foi criada uma thread caso o banco esteja muito lotado a thread não deixa o programa travado
   
        new Thread() {
            @Override
            public void run() {
                JasperPrint impressao;
                Connection conn = null;
                
                try {
                    conn = new Dados().conexao(NOME, SENHA);

                    impressao = JasperFillManager.fillReport(
                            relatorio, params, conn);
                    
                    JasperViewer.viewReport(impressao,false);
                } catch (JRException ex) {
                    System.err.println("Não foi possível exportar o relatório.\n\n");
                    ex.printStackTrace();
                } catch (Exception ex) {
                    Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                    try {
                        conn.close();
                    } catch (SQLException ex) {
                        Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                
            }
	}.start();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu estoque;
    private javax.swing.JMenu gerenciar;
    private javax.swing.JMenuItem gerenciarCliente;
    private javax.swing.JMenuItem gerenciarFornecedor;
    private javax.swing.JMenuItem gerenciarProduto;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu novo;
    private javax.swing.JMenuItem novoCliente;
    private javax.swing.JMenuItem novoFornecedor;
    private javax.swing.JMenuItem novoProduto;
    private javax.swing.JMenu relatorio;
    private javax.swing.JMenuItem relatorioCliente;
    private javax.swing.JMenuItem relatorioItem;
    private javax.swing.JMenuItem relatorioVendas;
    // End of variables declaration//GEN-END:variables
    
    private static final String NOME = "root";
    
    private static final String SENHA = "123456";
    
    private static final String rCliente = 
            System.getProperty("user.dir")+"/src/relatorios/reportClienteVendas.jasper";
    private static final String rVenda = 
            System.getProperty("user.dir")+"/src/relatorios/reportVendas.jasper";
    private static final String rItem = 
            System.getProperty("user.dir")+"/src/relatorios/reportItens.jasper";

}
